[{"/Users/codesoftic/Downloads/chat-client-master/src/socketContext.js":"1","/Users/codesoftic/Downloads/chat-client-master/src/components/Chat/Chat.js":"2","/Users/codesoftic/Downloads/chat-client-master/src/mainContext.js":"3","/Users/codesoftic/Downloads/chat-client-master/src/components/Login/Login.js":"4","/Users/codesoftic/Downloads/chat-client-master/src/usersContext.js":"5","/Users/codesoftic/Downloads/chat-client-master/src/components/DefaultPage.js":"6","/Users/codesoftic/Downloads/chat-client-master/src/App.js":"7"},{"size":437,"mtime":1622986371485,"results":"8","hashOfConfig":"9"},{"size":4859,"mtime":1622998227280,"results":"10","hashOfConfig":"9"},{"size":495,"mtime":1623076005873,"results":"11","hashOfConfig":"9"},{"size":2811,"mtime":1623076117913,"results":"12","hashOfConfig":"9"},{"size":348,"mtime":1611485668000,"results":"13","hashOfConfig":"9"},{"size":483,"mtime":1611485668000,"results":"14","hashOfConfig":"9"},{"size":1038,"mtime":1611485668000,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"c3tosw",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"21"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"/Users/codesoftic/Downloads/chat-client-master/src/socketContext.js",[],["34","35"],"/Users/codesoftic/Downloads/chat-client-master/src/components/Chat/Chat.js",[],["36","37"],"/Users/codesoftic/Downloads/chat-client-master/src/mainContext.js",[],"/Users/codesoftic/Downloads/chat-client-master/src/components/Login/Login.js",["38"],"import React, { useContext, useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { MainContext } from '../../mainContext'\nimport { SocketContext } from '../../socketContext'\nimport { Flex, Heading, IconButton, Input } from \"@chakra-ui/react\"\nimport { RiArrowRightLine } from \"react-icons/ri\"\nimport { useToast } from \"@chakra-ui/react\"\nimport { UsersContext } from '../../usersContext'\n\nconst Login = () => {\n    const socket = useContext(SocketContext)\n    const { name, setName, room, setRoom ,notificationId,SetNotificationId } = useContext(MainContext)\n    const history = useHistory()\n    const toast = useToast()\n    const { setUsers } = useContext(UsersContext)\n\n    //Checks to see if there's a user already present\n\n    useEffect(() => {\n        socket.on(\"users\", users => {\n            setUsers(users)\n        })\n    })\n\n    //Emits the login event and if successful redirects to chat and saves user data\n    const handleClick = () => {\n        socket.emit('login', { name, room , notificationId}, error => {\n            if (error) {\n                console.log(error)\n                return toast({\n                    position: \"top\",\n                    title: \"Error\",\n                    description: error,\n                    status: \"error\",\n                    duration: 5000,\n                    isClosable: true,\n                })\n            }\n            history.push('/chat')\n            return toast({\n                position: \"top\",\n                title: \"Hey there\",\n                description: `Welcome to ${room}`,\n                status: \"success\",\n                duration: 5000,\n                isClosable: true,\n            })\n        })\n    }\n\n    return (\n        <Flex className='login' flexDirection='column' mb='8'>\n            <Heading as=\"h1\" size=\"4xl\" textAlign='center' mb='8' fontFamily='DM Sans' fontWeight='600' letterSpacing='-2px'>Codesoftic</Heading>\n            <Flex className=\"form\" gap='1rem' flexDirection={{ base: \"column\", md: \"row\" }}>\n                <Input variant='filled' mr={{ base: \"0\", md: \"4\" }} mb={{ base: \"4\", md: \"0\" }} type=\"text\" placeholder='User Name' value={name} onChange={e => setName(e.target.value)} />\n                <Input variant='filled' mr={{ base: \"0\", md: \"4\" }} mb={{ base: \"4\", md: \"0\" }} type=\"text\" placeholder='room' value={room} onChange={e => setRoom(e.target.value)} />\n                <Input variant='filled' mr={{ base: \"0\", md: \"4\" }} mb={{ base: \"4\", md: \"0\" }} type=\"text\"  placeholder='notificationId' value={notificationId} onChange={e => SetNotificationId(e.target.value)} />\n\n                <IconButton colorScheme='blue' isRound='true' icon={<RiArrowRightLine />} onClick={handleClick}></IconButton>\n            </Flex>\n        </Flex>\n    )\n}\n\nexport default Login\n","/Users/codesoftic/Downloads/chat-client-master/src/usersContext.js",[],"/Users/codesoftic/Downloads/chat-client-master/src/components/DefaultPage.js",["39"],"import { IconButton } from '@chakra-ui/react'\nimport React from 'react'\nimport { BiArrowBack } from 'react-icons/bi'\nimport { Redirect, useHistory } from 'react-router-dom'\nexport default function DefaultPage() {\n    const history = useHistory()\n    const redirect = () => history.push('/')\n    return (\n        <div>\n            <IconButton mr={2} isRound='true' bg='green.300' color='white' icon={<BiArrowBack />} onClick={redirect} /> You're lost. Go home.\n        </div>\n    )\n}\n","/Users/codesoftic/Downloads/chat-client-master/src/App.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"40","replacedBy":"44"},{"ruleId":"42","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":1,"column":29,"nodeType":"48","messageId":"49","endLine":1,"endColumn":37},{"ruleId":"46","severity":1,"message":"50","line":4,"column":10,"nodeType":"48","messageId":"49","endLine":4,"endColumn":18},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],["51"],["52"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation"]